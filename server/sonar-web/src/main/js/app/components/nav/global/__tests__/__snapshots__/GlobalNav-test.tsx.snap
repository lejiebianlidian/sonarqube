// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly if there are new features 1`] = `
<NavBar
  className="navbar-global"
  height={48}
  id="global-navigation"
>
  <SonarCloudNavBranding />
  <GlobalNavMenu
    accessToken="token"
    appState={
      Object {
        "canAdmin": false,
        "globalPages": Array [],
        "organizationsEnabled": false,
        "qualifiers": Array [],
      }
    }
    currentUser={
      Object {
        "isLoggedIn": true,
      }
    }
    location={
      Object {
        "pathname": "",
      }
    }
    setCurrentUserSetting={[MockFunction]}
  />
  <ul
    className="global-navbar-menu global-navbar-menu-right"
  >
    <NavLatestNotification
      lastNews={
        Object {
          "features": Array [
            Object {
              "categories": Array [
                Object {
                  "color": "#ff0000",
                  "name": "Java",
                },
              ],
              "description": "10 new Java rules",
            },
          ],
          "notification": "10 Java rules, Github checks, Security Hotspots, BitBucket branch decoration",
          "publicationDate": "2018-04-06",
        }
      }
      onClick={[Function]}
      setCurrentUserSetting={[MockFunction]}
    />
    <GlobalNavExplore
      location={
        Object {
          "pathname": "",
        }
      }
    />
    <EmbedDocsPopupHelper />
    <withRouter(Search)
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": true,
        }
      }
    />
    <GlobalNavPlus
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": true,
        }
      }
    />
    <Connect(withRouter(GlobalNavUser))
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": true,
        }
      }
    />
  </ul>
</NavBar>
`;

exports[`should render correctly: anonymous users 1`] = `
<NavBar
  className="navbar-global"
  height={48}
  id="global-navigation"
>
  <Connect(GlobalNavBranding) />
  <GlobalNavMenu
    accessToken="token"
    appState={
      Object {
        "canAdmin": false,
        "globalPages": Array [],
        "organizationsEnabled": false,
        "qualifiers": Array [],
      }
    }
    currentUser={
      Object {
        "isLoggedIn": false,
      }
    }
    location={
      Object {
        "pathname": "",
      }
    }
    setCurrentUserSetting={[MockFunction]}
  />
  <ul
    className="global-navbar-menu global-navbar-menu-right"
  >
    <EmbedDocsPopupHelper />
    <withRouter(Search)
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": false,
        }
      }
    />
    <Connect(withRouter(GlobalNavUser))
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": false,
        }
      }
    />
  </ul>
</NavBar>
`;

exports[`should render correctly: logged in users 1`] = `
<NavBar
  className="navbar-global"
  height={48}
  id="global-navigation"
>
  <Connect(GlobalNavBranding) />
  <GlobalNavMenu
    accessToken="token"
    appState={
      Object {
        "canAdmin": false,
        "globalPages": Array [],
        "organizationsEnabled": false,
        "qualifiers": Array [],
      }
    }
    currentUser={
      Object {
        "isLoggedIn": true,
      }
    }
    location={
      Object {
        "pathname": "",
      }
    }
    setCurrentUserSetting={[MockFunction]}
  />
  <ul
    className="global-navbar-menu global-navbar-menu-right"
  >
    <EmbedDocsPopupHelper />
    <withRouter(Search)
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": true,
        }
      }
    />
    <GlobalNavPlus
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": true,
        }
      }
    />
    <Connect(withRouter(GlobalNavUser))
      appState={
        Object {
          "canAdmin": false,
          "globalPages": Array [],
          "organizationsEnabled": false,
          "qualifiers": Array [],
        }
      }
      currentUser={
        Object {
          "isLoggedIn": true,
        }
      }
    />
  </ul>
</NavBar>
`;
